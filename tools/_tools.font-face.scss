@charset "UTF-8";

// ============================================================================
//
// FONT-FACE
//
// ============================================================================


// Implement cross-browser @font-face with the greatest of ease.
// https://davidtheclark.github.io/scut/font-face.html


// ARGUMENTS:
//
// `$font-family`
// A name for the font.
//
// `$file-path`
// The relative path to the font's files, including the files' common path and
// name and excluding their extensions.
//
// `$weight` (default value: normal)
// A font-weight value. This argument is optional: you can just leave it out for
// your italic non-bold fonts. See the example below.
//
// `$style` (default value: normal)
// A font-style value.
//
// `$formats` (default value: eot woff2 woff ttf svg)
// The font formats that you would like to include (in case you don't have them
// all, or you want to thin out your code for modern browsers, or whatever your
// private reasons).


// USAGE:
//
// @include font-face("Arvo", "fonts/arvo-regular-webfont");
// @include font-face("Arvo", "fonts/arvo-bold-webfont", bold);
// @include font-face("Arvo", "fonts/arvo-italic-webfont", italic);
// or @include font-face("Arvo", "fonts/arvo-italic-webfont", normal, italic);
// @include font-face("Arvo", "fonts/arvo-bolditalic-webfont", bold, italic);
// @include font-face("Arvo", "fonts/arvo-regular-webfont", $formats: woff ttf);


@function main-src($formats, $file-path, $font-family) {
  // Return the list of `src` values, in order, that a good `@font-face` will need,
  // including only those formats specified in the list `$formats`.
  $result: ();
  @if index($formats, eot) {
    $eot-val: url('#{$file-path}.eot?#iefix') format('embedded-opentype');
    $result: append($result, $eot-val, comma);
  }
  @if index($formats, woff2) {
    $woff2-val: url('#{$file-path}.woff2') format('woff2');
    $result: append($result, $woff2-val, comma);
  }
  @if index($formats, woff) {
    $woff-val: url('#{$file-path}.woff') format('woff');
    $result: append($result, $woff-val, comma);
  }
  @if index($formats, ttf) {
    $ttf-val: url('#{$file-path}.ttf') format('truetype');
    $result: append($result, $ttf-val, comma);
  }
  @if index($formats, svg) {
    $svg-val: url('#{$file-path}.svg##{$font-family}') format('svg');
    $result: append($result, $svg-val, comma);
  }
  @return $result;
}

@mixin font-face (
  $font-family,
  $file-path,
  $weight: normal,
  $style: normal,
  $formats: eot woff2 woff ttf svg
) {

  @if index('italic' 'oblique', $weight) {
    $style: $weight;
    $weight: normal;
  }

  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;

    @if index($formats, eot) {
      src: url('#{$file-path}.eot');
    }
    src: main-src($formats, $file-path, $font-family);
  }

}
